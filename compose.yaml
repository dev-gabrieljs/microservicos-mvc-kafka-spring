services:
  db:
    image: postgres:15
    restart: always
    container_name: postgres-carDB
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: car_post_storage
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: Password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    entrypoint: >
      bash -c "
        docker-entrypoint.sh postgres &
        until pg_isready -U admin -d car_post_storage; do
          echo 'Aguardando PostgreSQL iniciar...'
          sleep 2
        done;
        psql -U admin -d car_post_storage -c 'CREATE SCHEMA IF NOT EXISTS analytics;' &&
        psql -U admin -d car_post_storage -c 'CREATE SCHEMA IF NOT EXISTS storage;' &&
        wait
      "


  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3


volumes:
  postgres-data:

